<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bluesliuf</title>
  
  <subtitle>Though failed, Still keep smiling</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liufan.vip/"/>
  <updated>2019-03-29T11:54:49.833Z</updated>
  <id>https://liufan.vip/</id>
  
  <author>
    <name>bluesliuf</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用深度学习对医学CT图像(LIDC-IDRI)中的肺结节进行良恶性判断</title>
    <link href="https://liufan.vip/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/2019-3-29-%E5%88%A9%E7%94%A8%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%AF%B9%E5%8C%BB%E5%AD%A6-CT-%E5%9B%BE%E5%83%8F%E4%B8%AD%E7%9A%84%E8%82%BA%E7%BB%93%E8%8A%82%E8%BF%9B%E8%A1%8C%E8%89%AF%E6%81%B6%E6%80%A7%E5%88%A4%E6%96%AD/"/>
    <id>https://liufan.vip/项目实战/2019-3-29-利用深度学习对医学-CT-图像中的肺结节进行良恶性判断/</id>
    <published>2019-03-29T02:22:47.000Z</published>
    <updated>2019-03-29T11:54:49.833Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;肺癌是最常见的癌症，目前，CT可用于帮助医生在早期阶段检测肺癌。 在许多情况下，识别肺癌的诊断取决于医生的经验，这可能会忽略一些患者并导致一些问题。 在许多医学影像诊断领域，深度学习已被证明是一种流行且有效的方法。&lt;/p&gt;
    
    </summary>
    
      <category term="项目实战" scheme="https://liufan.vip/categories/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="deep learning" scheme="https://liufan.vip/tags/deep-learning/"/>
    
      <category term="CNN" scheme="https://liufan.vip/tags/CNN/"/>
    
  </entry>
  
  <entry>
    <title>CNN网络发展史</title>
    <link href="https://liufan.vip/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2019-3-28-CNN%E7%BD%91%E7%BB%9C%E5%8F%91%E5%8F%91%E5%B1%95%E5%8F%B2/"/>
    <id>https://liufan.vip/深度学习/2019-3-28-CNN网络发发展史/</id>
    <published>2019-03-28T03:47:58.000Z</published>
    <updated>2019-03-28T03:57:39.432Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;卷积神经网络可谓是现在深度学习领域中大红大紫的网络框架，尤其在计算机视觉领域更是一枝独秀。&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="https://liufan.vip/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="CNN" scheme="https://liufan.vip/tags/CNN/"/>
    
  </entry>
  
  <entry>
    <title>马氏距离和欧式距离详解</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-27-%E9%A9%AC%E6%B0%8F%E8%B7%9D%E7%A6%BB%E5%92%8C%E6%AC%A7%E5%BC%8F%E8%B7%9D%E7%A6%BB%E8%AF%A6%E8%A7%A3/"/>
    <id>https://liufan.vip/机器学习/2019-3-27-马氏距离和欧式距离详解/</id>
    <published>2019-03-27T13:27:21.000Z</published>
    <updated>2019-03-28T02:13:41.918Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;一般在机器学习模型中会涉及到衡量两个样本间的距离，如&lt;strong&gt;聚类、KNN，K-means&lt;/strong&gt;等，使用的距离为&lt;strong&gt;欧式距离&lt;/strong&gt;。其实，除了欧氏距离之外，还有很多的距离计算标准，本文主要介绍欧氏距离和马氏距离。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="distance" scheme="https://liufan.vip/tags/distance/"/>
    
  </entry>
  
  <entry>
    <title>集成学习中的Bagging和Boosting</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-25-%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E4%B8%AD%E7%9A%84Bagging%E5%92%8CBoosting/"/>
    <id>https://liufan.vip/机器学习/2019-3-25-集成学习中的Bagging和Boosting/</id>
    <published>2019-03-25T11:51:38.000Z</published>
    <updated>2019-03-25T13:42:51.717Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在机器学习和统计学习中, &lt;strong&gt;集成学习&lt;/strong&gt;(&lt;code&gt;Ensemble Learning&lt;/code&gt;)是一种将多种学习算法组合在一起以取得更好表现的一种方法。它本身不是一个单独的机器学习算法，而是通过构建并结合多个机器学习器来完成学习任务。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="ensemble learning" scheme="https://liufan.vip/tags/ensemble-learning/"/>
    
  </entry>
  
  <entry>
    <title>数字图像处理的常用方法</title>
    <link href="https://liufan.vip/Computer-vision/2019-3-25-%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>https://liufan.vip/Computer-vision/2019-3-25-数字图像处理的常用方法/</id>
    <published>2019-03-25T08:59:56.000Z</published>
    <updated>2019-03-25T09:24:33.168Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;数字图像处理是指将图像信号转换成数字信号并利用计算机对其进行处理的过程。图像处理中，输入的是质量低的图像，输出的是改善质量后的图像，常用的图像处理方法有图像增强、复原、编码、压缩等。&lt;/p&gt;
    
    </summary>
    
      <category term="Computer vision" scheme="https://liufan.vip/categories/Computer-vision/"/>
    
    
      <category term="Image processing" scheme="https://liufan.vip/tags/Image-processing/"/>
    
  </entry>
  
  <entry>
    <title>准确率，精确率，召回率和F1值</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-22-%E5%87%86%E7%A1%AE%E7%8E%87%EF%BC%8C%E7%B2%BE%E7%A1%AE%E7%8E%87%EF%BC%8C%E5%8F%AC%E5%9B%9E%E7%8E%87%E5%92%8CF1%E5%80%BC/"/>
    <id>https://liufan.vip/机器学习/2019-3-22-准确率，精确率，召回率和F1值/</id>
    <published>2019-03-22T11:54:35.000Z</published>
    <updated>2019-03-22T13:59:58.581Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;机器学习(ML),自然语言处理(NLP),信息检索(IR)&lt;/strong&gt;等领域,&lt;strong&gt;评估&lt;/strong&gt;&lt;code&gt;(Evaluation)&lt;/code&gt;是一个必要的 工作,而其评价指标往往有如下几点:&lt;strong&gt;准确率&lt;/strong&gt;&lt;code&gt;(Accuracy)&lt;/code&gt;&lt;strong&gt;,精确率&lt;/strong&gt;&lt;code&gt;(Precision)&lt;/code&gt;,&lt;strong&gt;召回率&lt;/strong&gt;&lt;code&gt;(Recall)&lt;/code&gt;和&lt;code&gt;F1-Measure&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="evaluation" scheme="https://liufan.vip/tags/evaluation/"/>
    
  </entry>
  
  <entry>
    <title>牛客笔试题之顺丰机器学习真题</title>
    <link href="https://liufan.vip/%E7%89%9B%E5%AE%A2%E7%AC%94%E8%AF%95%E9%A2%98/2019-3-22-%E7%89%9B%E5%AE%A2%E7%AC%94%E8%AF%95%E9%A2%98%E4%B9%8B%E9%A1%BA%E4%B8%B0%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9C%9F%E9%A2%98/"/>
    <id>https://liufan.vip/牛客笔试题/2019-3-22-牛客笔试题之顺丰机器学习真题/</id>
    <published>2019-03-22T01:48:30.000Z</published>
    <updated>2019-03-22T03:30:12.080Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;昨天做了一套顺丰人工智能和机器学习的真题，下面是对其中一些知识点的总结。&lt;/p&gt;
    
    </summary>
    
      <category term="牛客笔试题" scheme="https://liufan.vip/categories/%E7%89%9B%E5%AE%A2%E7%AC%94%E8%AF%95%E9%A2%98/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="computer basis" scheme="https://liufan.vip/tags/computer-basis/"/>
    
  </entry>
  
  <entry>
    <title>机器学习正则化之L0、L1与L2范数</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-21-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%AD%A3%E5%88%99%E5%8C%96%E4%B9%8BL0%E3%80%81L1%E4%B8%8EL2%E8%8C%83%E6%95%B0/"/>
    <id>https://liufan.vip/机器学习/2019-3-21-机器学习正则化之L0、L1与L2范数/</id>
    <published>2019-03-21T12:03:56.000Z</published>
    <updated>2019-03-21T13:44:57.586Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近刷题时，经常会遇到关于L1和L2范数的知识点，本文就其详细的分析记录一下。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="regularization" scheme="https://liufan.vip/tags/regularization/"/>
    
  </entry>
  
  <entry>
    <title>牛客笔试题之机器学习</title>
    <link href="https://liufan.vip/%E7%89%9B%E5%AE%A2%E7%AC%94%E8%AF%95%E9%A2%98/2019-3-21-%E7%89%9B%E5%AE%A2%E7%AC%94%E8%AF%95%E9%A2%98%E4%B9%8B%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    <id>https://liufan.vip/牛客笔试题/2019-3-21-牛客笔试题之机器学习/</id>
    <published>2019-03-21T01:42:05.000Z</published>
    <updated>2019-03-21T09:06:23.965Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;昨天做完了&lt;a href=&quot;https://www.nowcoder.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;牛客网&lt;/a&gt;上的机器学习试题，下面是对一些错题的分析，并简要总结了一些机器学习中应该注意的知识点，过段时间会对其中的一些方法进行更加详细的分析介绍。题中&lt;font color=&quot;#FF0000&quot;&gt;&lt;strong&gt;打问号？&lt;/strong&gt;&lt;/font&gt;代表该题答案存在争议，不一定准确。&lt;/p&gt;
    
    </summary>
    
      <category term="牛客笔试题" scheme="https://liufan.vip/categories/%E7%89%9B%E5%AE%A2%E7%AC%94%E8%AF%95%E9%A2%98/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>深度学习框架的对比及分析</title>
    <link href="https://liufan.vip/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2019-3-19-%E4%B8%89%E5%A4%A7%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6%E7%9A%84%E5%AF%B9%E6%AF%94%E5%8F%8A%E5%88%86%E6%9E%90/"/>
    <id>https://liufan.vip/深度学习/2019-3-19-三大深度学习框架的对比及分析/</id>
    <published>2019-03-19T12:28:47.000Z</published>
    <updated>2019-03-19T13:13:49.335Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍了现在主流的三大深度学习框架&lt;code&gt;Tensorflow&lt;/code&gt;、&lt;code&gt;Caffe&lt;/code&gt;和&lt;code&gt;Pytorch&lt;/code&gt;的组成结构，并对其特点进行了简要分析。&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="https://liufan.vip/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="deep learning" scheme="https://liufan.vip/tags/deep-learning/"/>
    
      <category term="tensorflow" scheme="https://liufan.vip/tags/tensorflow/"/>
    
      <category term="architecture" scheme="https://liufan.vip/tags/architecture/"/>
    
  </entry>
  
  <entry>
    <title>牛客笔试题之Python</title>
    <link href="https://liufan.vip/%E7%89%9B%E5%AE%A2%E7%AC%94%E8%AF%95%E9%A2%98/2019-3-19-%E7%89%9B%E5%AE%A2%E7%AC%94%E8%AF%95%E9%A2%98%E4%B9%8Bpython/"/>
    <id>https://liufan.vip/牛客笔试题/2019-3-19-牛客笔试题之python/</id>
    <published>2019-03-19T06:14:24.000Z</published>
    <updated>2019-03-19T07:48:30.947Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这几天做完了&lt;a href=&quot;https://www.nowcoder.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;牛客网&lt;/a&gt;上的Python试题，下面是对一些错题的分析，并总结了一些python中应该注意的知识点。&lt;/p&gt;
    
    </summary>
    
      <category term="牛客笔试题" scheme="https://liufan.vip/categories/%E7%89%9B%E5%AE%A2%E7%AC%94%E8%AF%95%E9%A2%98/"/>
    
    
      <category term="python" scheme="https://liufan.vip/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>机器学习方法之K-means聚类</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-14-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E4%B9%8BK-means/"/>
    <id>https://liufan.vip/机器学习/2019-3-14-机器学习方法之K-means/</id>
    <published>2019-03-14T10:15:01.000Z</published>
    <updated>2019-03-16T09:06:27.473Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;聚类&lt;/strong&gt;(&lt;code&gt;Clustering&lt;/code&gt;)，就是将相似的事物聚集在一 起，而将不相似的事物划分到不同的类别的过程，是数据分析之中十分重要的一种手段。与此前介绍的&lt;strong&gt;决策树，支持向量机&lt;/strong&gt;等&lt;strong&gt;监督学习&lt;/strong&gt;不同，聚类算法是&lt;strong&gt;非监督学习&lt;/strong&gt;(&lt;code&gt;unsupervised learning&lt;/code&gt; )，在数据集中，并不清楚每条数据的具体类别。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="k-means" scheme="https://liufan.vip/tags/k-means/"/>
    
  </entry>
  
  <entry>
    <title>回归中的相关度和决定系数</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-13-%E5%9B%9E%E5%BD%92%E4%B8%AD%E7%9A%84%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0/"/>
    <id>https://liufan.vip/机器学习/2019-3-13-回归中的相关系数/</id>
    <published>2019-03-13T12:55:37.000Z</published>
    <updated>2019-03-13T13:39:00.863Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;训练集中可能是有若干维度的特征。但有时并不是所有特征都是有用的，有的特征其实和结果并没有关系。因此需要一个能衡量自变量和因变量之间的相关度。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="Conv&amp;&amp;R" scheme="https://liufan.vip/tags/Conv-R/"/>
    
  </entry>
  
  <entry>
    <title>机器学习方法之非线性回归（ Logistic Regression）</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-13-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E4%B9%8B%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
    <id>https://liufan.vip/机器学习/2019-3-13-机器学习方法之非线性回归/</id>
    <published>2019-03-13T06:15:52.000Z</published>
    <updated>2019-03-13T08:02:59.131Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;非线性回归是线性回归的延伸，其目标预测函数不是线性的。本文主要介绍&lt;strong&gt;逻辑回归&lt;/strong&gt;（&lt;code&gt;Logistic Regression&lt;/code&gt;），它是非线性回归的一种，虽然名字中有“回归”二字，但其本质上是一个&lt;strong&gt;分类模型&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="Unlinear regression" scheme="https://liufan.vip/tags/Unlinear-regression/"/>
    
  </entry>
  
  <entry>
    <title>机器学习方法之线性回归（LR）</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-12-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E4%B9%8B%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
    <id>https://liufan.vip/机器学习/2019-3-12-机器学习方法之线性回归/</id>
    <published>2019-03-12T11:35:45.000Z</published>
    <updated>2019-03-13T01:17:05.891Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;线性回归&lt;/strong&gt;(&lt;code&gt;linear regression&lt;/code&gt;)是利用数理统计和归回分析，来确定两种或两种以上变量间相互依赖的定量关系的一种统计分析方法。与之前的分类问题( &lt;code&gt;Classification&lt;/code&gt; )不一样的是，分类问题的结果是&lt;strong&gt;离散型&lt;/strong&gt;的；而回归问题中的结果是&lt;strong&gt;连续型&lt;/strong&gt;（数值）的。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="linear regression" scheme="https://liufan.vip/tags/linear-regression/"/>
    
  </entry>
  
  <entry>
    <title>机器学习方法之神经网络（NN）</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-10-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E4%B9%8BNN/"/>
    <id>https://liufan.vip/机器学习/2019-3-10-机器学习方法之NN/</id>
    <published>2019-03-10T08:17:36.000Z</published>
    <updated>2019-03-11T05:14:54.081Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;神经网络算法( &lt;code&gt;Neural Network&lt;/code&gt; )是机器学习中非常非常重要的算法。它 以人脑中的神经网络为启发，是整个深度学习的核心算法。深度学习就是根据神经网络算法进行的一个延伸。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="neural network" scheme="https://liufan.vip/tags/neural-network/"/>
    
  </entry>
  
  <entry>
    <title>机器学习方法之SVM</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-8-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E4%B9%8BSVM/"/>
    <id>https://liufan.vip/机器学习/2019-3-8-机器学习方法之SVM/</id>
    <published>2019-03-08T11:16:23.000Z</published>
    <updated>2019-03-09T09:10:51.842Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;支持向量机（&lt;font color=&quot;#FF0000&quot;&gt;support vector machine&lt;/font&gt;）,简称&lt;strong&gt;SVM&lt;/strong&gt;，最早在1963年，由 Vladimir N. Vapnik 和 Alexey Ya. Chervonenkis 提出。目前的版本(soft margin)是由Corinna Cortes 和 Vapnik在1993年提出，并在1995年发表。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="svm" scheme="https://liufan.vip/tags/svm/"/>
    
  </entry>
  
  <entry>
    <title>机器学习方法之决策树</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-6-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E4%B9%8B%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    <id>https://liufan.vip/机器学习/2019-3-6-机器学习方法之决策树/</id>
    <published>2019-03-06T13:29:57.000Z</published>
    <updated>2019-03-07T12:46:43.280Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;决策树是一个类似于流程图的树结构：其中，每个内部结点表示在一个属性上的测试，每个分支代表一个属性输出，而每个树叶结点代表类或类分布。树的最顶层是根结点。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="desion tree" scheme="https://liufan.vip/tags/desion-tree/"/>
    
  </entry>
  
  <entry>
    <title>机器学习方法之KNN</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-2-25-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E4%B9%8BKNN/"/>
    <id>https://liufan.vip/机器学习/2019-2-25-机器学习方法之KNN/</id>
    <published>2019-02-25T07:46:20.000Z</published>
    <updated>2019-03-08T02:03:36.338Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;K最近邻(k-Nearest Neighbor，KNN)分类算法，思路是：如果一个样本在特征空间中的k个最相似(即特征空间中最邻近)的样本中的大多数属于某一个类别，则该样本也属于这个类别。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="knn" scheme="https://liufan.vip/tags/knn/"/>
    
  </entry>
  
  <entry>
    <title>Tensorflow入门学习2</title>
    <link href="https://liufan.vip/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2019-2-24-Tensorflow%E5%85%A5%E9%97%A82/"/>
    <id>https://liufan.vip/深度学习/2019-2-24-Tensorflow入门2/</id>
    <published>2019-02-24T14:16:09.000Z</published>
    <updated>2019-02-25T08:47:31.411Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://liufan.vip/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2019-2-23-Tensorflow%E5%85%A5%E9%97%A8/&quot;&gt;&lt;strong&gt;这篇博文&lt;/strong&gt;&lt;/a&gt;主要是TensorFlow的一个简单入门，并介绍了如何实现Softmax Regression模型，来对MNIST数据集中的数字手写体进行识别。&lt;/p&gt;
&lt;p&gt;然而，由于Softmax Regression模型相对简单，所以最终的识别准确率并不高。下面将针对MNIST数据集构建更加复杂精巧的模型，以进一步提高识别准确率。&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="https://liufan.vip/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="deep learning" scheme="https://liufan.vip/tags/deep-learning/"/>
    
      <category term="tensorflow" scheme="https://liufan.vip/tags/tensorflow/"/>
    
  </entry>
  
</feed>

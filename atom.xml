<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bluesliuf</title>
  
  <subtitle>Though failed, Still keep smiling</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liufan.vip/"/>
  <updated>2019-03-19T13:13:49.335Z</updated>
  <id>https://liufan.vip/</id>
  
  <author>
    <name>bluesliuf</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>深度学习框架的对比及分析</title>
    <link href="https://liufan.vip/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2019-3-19-%E4%B8%89%E5%A4%A7%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6%E7%9A%84%E5%AF%B9%E6%AF%94%E5%8F%8A%E5%88%86%E6%9E%90/"/>
    <id>https://liufan.vip/深度学习/2019-3-19-三大深度学习框架的对比及分析/</id>
    <published>2019-03-19T12:28:47.000Z</published>
    <updated>2019-03-19T13:13:49.335Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍了现在主流的三大深度学习框架&lt;code&gt;Tensorflow&lt;/code&gt;、&lt;code&gt;Caffe&lt;/code&gt;和&lt;code&gt;Pytorch&lt;/code&gt;的组成结构，并对其特点进行了简要分析。&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="https://liufan.vip/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="deep learning" scheme="https://liufan.vip/tags/deep-learning/"/>
    
      <category term="tensorflow" scheme="https://liufan.vip/tags/tensorflow/"/>
    
      <category term="architecture" scheme="https://liufan.vip/tags/architecture/"/>
    
  </entry>
  
  <entry>
    <title>牛客笔试题之Python</title>
    <link href="https://liufan.vip/%E7%89%9B%E5%AE%A2%E7%AC%94%E8%AF%95%E9%A2%98/2019-3-19-%E7%89%9B%E5%AE%A2%E7%AC%94%E8%AF%95%E9%A2%98%E4%B9%8Bpython/"/>
    <id>https://liufan.vip/牛客笔试题/2019-3-19-牛客笔试题之python/</id>
    <published>2019-03-19T06:14:24.000Z</published>
    <updated>2019-03-19T07:48:30.947Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这几天做完了&lt;a href=&quot;https://www.nowcoder.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;牛客网&lt;/a&gt;上的Python试题，下面是对一些错题的分析，并总结了一些python中应该注意的知识点。&lt;/p&gt;
    
    </summary>
    
      <category term="牛客笔试题" scheme="https://liufan.vip/categories/%E7%89%9B%E5%AE%A2%E7%AC%94%E8%AF%95%E9%A2%98/"/>
    
    
      <category term="python" scheme="https://liufan.vip/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>机器学习方法之K-means聚类</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-14-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E4%B9%8BK-means/"/>
    <id>https://liufan.vip/机器学习/2019-3-14-机器学习方法之K-means/</id>
    <published>2019-03-14T10:15:01.000Z</published>
    <updated>2019-03-16T09:06:27.473Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;聚类&lt;/strong&gt;(&lt;code&gt;Clustering&lt;/code&gt;)，就是将相似的事物聚集在一 起，而将不相似的事物划分到不同的类别的过程，是数据分析之中十分重要的一种手段。与此前介绍的&lt;strong&gt;决策树，支持向量机&lt;/strong&gt;等&lt;strong&gt;监督学习&lt;/strong&gt;不同，聚类算法是&lt;strong&gt;非监督学习&lt;/strong&gt;(&lt;code&gt;unsupervised learning&lt;/code&gt; )，在数据集中，并不清楚每条数据的具体类别。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="k-means" scheme="https://liufan.vip/tags/k-means/"/>
    
  </entry>
  
  <entry>
    <title>回归中的相关度和决定系数</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-13-%E5%9B%9E%E5%BD%92%E4%B8%AD%E7%9A%84%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0/"/>
    <id>https://liufan.vip/机器学习/2019-3-13-回归中的相关系数/</id>
    <published>2019-03-13T12:55:37.000Z</published>
    <updated>2019-03-13T13:39:00.863Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;训练集中可能是有若干维度的特征。但有时并不是所有特征都是有用的，有的特征其实和结果并没有关系。因此需要一个能衡量自变量和因变量之间的相关度。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="Conv&amp;&amp;R" scheme="https://liufan.vip/tags/Conv-R/"/>
    
  </entry>
  
  <entry>
    <title>机器学习方法之非线性回归（ Logistic Regression）</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-13-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E4%B9%8B%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
    <id>https://liufan.vip/机器学习/2019-3-13-机器学习方法之非线性回归/</id>
    <published>2019-03-13T06:15:52.000Z</published>
    <updated>2019-03-13T08:02:59.131Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;非线性回归是线性回归的延伸，其目标预测函数不是线性的。本文主要介绍&lt;strong&gt;逻辑回归&lt;/strong&gt;（&lt;code&gt;Logistic Regression&lt;/code&gt;），它是非线性回归的一种，虽然名字中有“回归”二字，但其本质上是一个&lt;strong&gt;分类模型&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="Unlinear regression" scheme="https://liufan.vip/tags/Unlinear-regression/"/>
    
  </entry>
  
  <entry>
    <title>机器学习方法之线性回归（LR）</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-12-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E4%B9%8B%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
    <id>https://liufan.vip/机器学习/2019-3-12-机器学习方法之线性回归/</id>
    <published>2019-03-12T11:35:45.000Z</published>
    <updated>2019-03-13T01:17:05.891Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;线性回归&lt;/strong&gt;(&lt;code&gt;linear regression&lt;/code&gt;)是利用数理统计和归回分析，来确定两种或两种以上变量间相互依赖的定量关系的一种统计分析方法。与之前的分类问题( &lt;code&gt;Classification&lt;/code&gt; )不一样的是，分类问题的结果是&lt;strong&gt;离散型&lt;/strong&gt;的；而回归问题中的结果是&lt;strong&gt;连续型&lt;/strong&gt;（数值）的。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="linear regression" scheme="https://liufan.vip/tags/linear-regression/"/>
    
  </entry>
  
  <entry>
    <title>机器学习方法之神经网络（NN）</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-10-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E4%B9%8BNN/"/>
    <id>https://liufan.vip/机器学习/2019-3-10-机器学习方法之NN/</id>
    <published>2019-03-10T08:17:36.000Z</published>
    <updated>2019-03-11T05:14:54.081Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;神经网络算法( &lt;code&gt;Neural Network&lt;/code&gt; )是机器学习中非常非常重要的算法。它 以人脑中的神经网络为启发，是整个深度学习的核心算法。深度学习就是根据神经网络算法进行的一个延伸。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="neural network" scheme="https://liufan.vip/tags/neural-network/"/>
    
  </entry>
  
  <entry>
    <title>机器学习方法之SVM</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-8-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E4%B9%8BSVM/"/>
    <id>https://liufan.vip/机器学习/2019-3-8-机器学习方法之SVM/</id>
    <published>2019-03-08T11:16:23.000Z</published>
    <updated>2019-03-09T09:10:51.842Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;支持向量机（&lt;font color=&quot;#FF0000&quot;&gt;support vector machine&lt;/font&gt;）,简称&lt;strong&gt;SVM&lt;/strong&gt;，最早在1963年，由 Vladimir N. Vapnik 和 Alexey Ya. Chervonenkis 提出。目前的版本(soft margin)是由Corinna Cortes 和 Vapnik在1993年提出，并在1995年发表。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="svm" scheme="https://liufan.vip/tags/svm/"/>
    
  </entry>
  
  <entry>
    <title>机器学习方法之决策树</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-6-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E4%B9%8B%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    <id>https://liufan.vip/机器学习/2019-3-6-机器学习方法之决策树/</id>
    <published>2019-03-06T13:29:57.000Z</published>
    <updated>2019-03-07T12:46:43.280Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;决策树是一个类似于流程图的树结构：其中，每个内部结点表示在一个属性上的测试，每个分支代表一个属性输出，而每个树叶结点代表类或类分布。树的最顶层是根结点。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="desion tree" scheme="https://liufan.vip/tags/desion-tree/"/>
    
  </entry>
  
  <entry>
    <title>机器学习方法之KNN</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-2-25-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E4%B9%8BKNN/"/>
    <id>https://liufan.vip/机器学习/2019-2-25-机器学习方法之KNN/</id>
    <published>2019-02-25T07:46:20.000Z</published>
    <updated>2019-03-08T02:03:36.338Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;K最近邻(k-Nearest Neighbor，KNN)分类算法，思路是：如果一个样本在特征空间中的k个最相似(即特征空间中最邻近)的样本中的大多数属于某一个类别，则该样本也属于这个类别。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="knn" scheme="https://liufan.vip/tags/knn/"/>
    
  </entry>
  
  <entry>
    <title>Tensorflow入门学习2</title>
    <link href="https://liufan.vip/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2019-2-24-Tensorflow%E5%85%A5%E9%97%A82/"/>
    <id>https://liufan.vip/深度学习/2019-2-24-Tensorflow入门2/</id>
    <published>2019-02-24T14:16:09.000Z</published>
    <updated>2019-02-25T08:47:31.411Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://liufan.vip/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2019-2-23-Tensorflow%E5%85%A5%E9%97%A8/&quot;&gt;&lt;strong&gt;这篇博文&lt;/strong&gt;&lt;/a&gt;主要是TensorFlow的一个简单入门，并介绍了如何实现Softmax Regression模型，来对MNIST数据集中的数字手写体进行识别。&lt;/p&gt;
&lt;p&gt;然而，由于Softmax Regression模型相对简单，所以最终的识别准确率并不高。下面将针对MNIST数据集构建更加复杂精巧的模型，以进一步提高识别准确率。&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="https://liufan.vip/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="deep learning" scheme="https://liufan.vip/tags/deep-learning/"/>
    
      <category term="tensorflow" scheme="https://liufan.vip/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>Tensorflow入门学习</title>
    <link href="https://liufan.vip/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2019-2-23-Tensorflow%E5%85%A5%E9%97%A8/"/>
    <id>https://liufan.vip/深度学习/2019-2-23-Tensorflow入门/</id>
    <published>2019-02-23T09:49:44.000Z</published>
    <updated>2019-02-25T08:47:18.374Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;TensorFlow-简介&quot;&gt;&lt;a href=&quot;#TensorFlow-简介&quot; class=&quot;headerlink&quot; title=&quot;TensorFlow 简介&quot;&gt;&lt;/a&gt;TensorFlow 简介&lt;/h2&gt;&lt;p&gt;TensorFlow是Google在2015年11月份开源的人工智能系统（&lt;a href=&quot;https://github.com/tensorflow/tensorflow&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Github项目地址&lt;/strong&gt;&lt;/a&gt;），是之前所开发的深度学习基础架构DistBelief的改进版本，该系统可以被用于语音识别、图片识别等多个领域。&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="https://liufan.vip/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="deep learning" scheme="https://liufan.vip/tags/deep-learning/"/>
    
      <category term="tensorflow" scheme="https://liufan.vip/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>Docker集群使用文档</title>
    <link href="https://liufan.vip/Docker%E5%AE%B9%E5%99%A8/2019-2-21-Docker%E9%9B%86%E7%BE%A4%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/"/>
    <id>https://liufan.vip/Docker容器/2019-2-21-Docker集群使用文档/</id>
    <published>2019-02-21T06:27:31.000Z</published>
    <updated>2019-03-08T03:07:47.582Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;用户管理-管理员权限&quot;&gt;&lt;a href=&quot;#用户管理-管理员权限&quot; class=&quot;headerlink&quot; title=&quot;用户管理 (管理员权限)&quot;&gt;&lt;/a&gt;用户管理&lt;font color=&quot;#FF0000&quot;&gt; (管理员权限)&lt;/font&gt;&lt;/h3&gt;&lt;h4 id=&quot;添加docker用户组&quot;&gt;&lt;a href=&quot;#添加docker用户组&quot; class=&quot;headerlink&quot; title=&quot;添加docker用户组:&quot;&gt;&lt;/a&gt;添加docker用户组:&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo groupadd -g &lt;span class=&quot;number&quot;&gt;344&lt;/span&gt; docker&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;添加用户到用户组：&quot;&gt;&lt;a href=&quot;#添加用户到用户组：&quot; class=&quot;headerlink&quot; title=&quot;添加用户到用户组：&quot;&gt;&lt;/a&gt;添加用户到用户组：&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo usermod -a -G 用户组 用户&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;从用户组中删除用户&quot;&gt;&lt;a href=&quot;#从用户组中删除用户&quot; class=&quot;headerlink&quot; title=&quot;从用户组中删除用户&quot;&gt;&lt;/a&gt;从用户组中删除用户&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gpasswd -d 用户 用户组&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Docker容器" scheme="https://liufan.vip/categories/Docker%E5%AE%B9%E5%99%A8/"/>
    
    
      <category term="docker使用" scheme="https://liufan.vip/tags/docker%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>深度学习的常见模型（GAN）</title>
    <link href="https://liufan.vip/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2019-2-20-%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%B8%B8%E8%A7%81%E6%A8%A1%E5%9E%8B-GAN/"/>
    <id>https://liufan.vip/深度学习/2019-2-20-深度学习的常见模型-GAN/</id>
    <published>2019-02-19T16:00:00.000Z</published>
    <updated>2019-02-25T08:46:58.153Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;GAN的来源&quot;&gt;&lt;a href=&quot;#GAN的来源&quot; class=&quot;headerlink&quot; title=&quot;GAN的来源&quot;&gt;&lt;/a&gt;GAN的来源&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;14年Goodfellow提出Generative adversarial nets即生成式对抗网络，它要解决的问题是如何从训练样本中学习出新样本，训练样本是图片就生成新图片，训练样本是文章就输出新文章等等。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="深度学习" scheme="https://liufan.vip/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="deep learning" scheme="https://liufan.vip/tags/deep-learning/"/>
    
      <category term="GAN model" scheme="https://liufan.vip/tags/GAN-model/"/>
    
  </entry>
  
  <entry>
    <title>深度学习的常见模型（CNN）</title>
    <link href="https://liufan.vip/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2019-1-14-%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%B8%B8%E8%A7%81%E6%A8%A1%E5%9E%8B-CNN/"/>
    <id>https://liufan.vip/深度学习/2019-1-14-深度学习的常见模型-CNN/</id>
    <published>2019-01-13T16:00:00.000Z</published>
    <updated>2019-03-14T10:13:39.012Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;CNN的来源&quot;&gt;&lt;a href=&quot;#CNN的来源&quot; class=&quot;headerlink&quot; title=&quot;CNN的来源&quot;&gt;&lt;/a&gt;CNN的来源&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;CNN由纽约大学的Yann LeCun于1998年提出。CNN本质上是一个多层感知机，其成功的原因关键在于它所采用的局部连接和共享权值的方式。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="深度学习" scheme="https://liufan.vip/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="deep learning" scheme="https://liufan.vip/tags/deep-learning/"/>
    
      <category term="CNN model" scheme="https://liufan.vip/tags/CNN-model/"/>
    
  </entry>
  
  <entry>
    <title>深度学习的发展</title>
    <link href="https://liufan.vip/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2019-1-14-%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%8F%91%E5%B1%95/"/>
    <id>https://liufan.vip/深度学习/2019-1-14-深度学习发展/</id>
    <published>2019-01-13T16:00:00.000Z</published>
    <updated>2019-02-25T08:46:35.052Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;深度学习的发展历程&quot;&gt;&lt;a href=&quot;#深度学习的发展历程&quot; class=&quot;headerlink&quot; title=&quot;深度学习的发展历程&quot;&gt;&lt;/a&gt;深度学习的发展历程&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;人工智能&lt;/li&gt;
&lt;li&gt;机器学习&lt;/li&gt;
&lt;li&gt;深度学习&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="深度学习" scheme="https://liufan.vip/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="deep learning" scheme="https://liufan.vip/tags/deep-learning/"/>
    
  </entry>
  
  <entry>
    <title>欢迎访问我的博客</title>
    <link href="https://liufan.vip/uncategorized/2019-01-13-FirstBlog/"/>
    <id>https://liufan.vip/uncategorized/2019-01-13-FirstBlog/</id>
    <published>2019-01-12T16:00:00.000Z</published>
    <updated>2019-02-23T09:45:11.424Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hey&quot;&gt;&lt;a href=&quot;#Hey&quot; class=&quot;headerlink&quot; title=&quot;Hey&quot;&gt;&lt;/a&gt;Hey&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;大家好，我是一名计算机领域的在读研究生，现研究方向为Deep Learning、Computer visi
      
    
    </summary>
    
    
      <category term="first" scheme="https://liufan.vip/tags/first/"/>
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bluesliuf</title>
  
  <subtitle>Though failed, Still keep smiling</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liufan.vip/"/>
  <updated>2019-04-06T13:19:55.043Z</updated>
  <id>https://liufan.vip/</id>
  
  <author>
    <name>bluesliuf</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据结构之树（二）</title>
    <link href="https://liufan.vip/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2019-4-6-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E6%A0%912/"/>
    <id>https://liufan.vip/数据结构/2019-4-6-数据结构之树2/</id>
    <published>2019-04-06T11:01:55.000Z</published>
    <updated>2019-04-06T13:19:55.043Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍&lt;strong&gt;二叉树的各种遍历方法&lt;/strong&gt;和如何&lt;strong&gt;线索化二叉树&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://liufan.vip/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="data structure" scheme="https://liufan.vip/tags/data-structure/"/>
    
      <category term="tree" scheme="https://liufan.vip/tags/tree/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之树（一）</title>
    <link href="https://liufan.vip/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2019-4-6-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E6%A0%91/"/>
    <id>https://liufan.vip/数据结构/2019-4-6-数据结构之树/</id>
    <published>2019-04-06T07:43:19.000Z</published>
    <updated>2019-04-06T10:56:13.746Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本部分主要介绍树的相关知识，将分为3篇博文介绍。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://liufan.vip/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="data structure" scheme="https://liufan.vip/tags/data-structure/"/>
    
      <category term="tree" scheme="https://liufan.vip/tags/tree/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之八大排序算法（二）</title>
    <link href="https://liufan.vip/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2019-4-5-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E6%8E%92%E5%BA%8F2/"/>
    <id>https://liufan.vip/数据结构/2019-4-5-数据结构之排序2/</id>
    <published>2019-04-05T07:24:48.000Z</published>
    <updated>2019-04-06T05:54:13.842Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在这篇博文中，我们介绍了剩下4种排序算法，并将对所有的排序算法做一个总结。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://liufan.vip/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="data structure" scheme="https://liufan.vip/tags/data-structure/"/>
    
      <category term="sort" scheme="https://liufan.vip/tags/sort/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之八大排序算法（一）</title>
    <link href="https://liufan.vip/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2019-4-5-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E6%8E%92%E5%BA%8F/"/>
    <id>https://liufan.vip/数据结构/2019-4-5-数据结构之排序/</id>
    <published>2019-04-05T01:57:31.000Z</published>
    <updated>2019-04-05T07:24:14.523Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍数据结构中常见的八大排序算法，冒泡排序、快速排序、直接插入排序、希尔排序、简单选择排序、堆排序、归并排序和基数排序。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://liufan.vip/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="data structure" scheme="https://liufan.vip/tags/data-structure/"/>
    
      <category term="sort" scheme="https://liufan.vip/tags/sort/"/>
    
  </entry>
  
  <entry>
    <title>2019春实习-百度-计算机视觉算法研发工程师真题</title>
    <link href="https://liufan.vip/Computer-vision/2019-4-4-%E6%98%A5%E5%AE%9E%E4%B9%A0-%E7%99%BE%E5%BA%A6-%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E7%AE%97%E6%B3%95%E7%A0%94%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    <id>https://liufan.vip/Computer-vision/2019-4-4-春实习-百度-计算机视觉算法研发工程师/</id>
    <published>2019-04-04T13:27:53.000Z</published>
    <updated>2019-04-04T13:56:49.477Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;前两天刚参加完百度计算机视觉算法实习岗的远程笔试，下面是我记忆中的一些考题，先记录下来，等答案公布再来详细分析。&lt;/p&gt;
    
    </summary>
    
      <category term="Computer vision" scheme="https://liufan.vip/categories/Computer-vision/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="deep learning" scheme="https://liufan.vip/tags/deep-learning/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之查找（三）</title>
    <link href="https://liufan.vip/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2019-4-4-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E6%9F%A5%E6%89%BE3/"/>
    <id>https://liufan.vip/数据结构/2019-4-4-数据结构之查找3/</id>
    <published>2019-04-04T07:17:05.000Z</published>
    <updated>2019-04-04T11:19:02.247Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;上一篇博文主要介绍了哈希查找算法，本文主要介绍&lt;strong&gt;树表查找算法&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://liufan.vip/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="data structure" scheme="https://liufan.vip/tags/data-structure/"/>
    
      <category term="searching" scheme="https://liufan.vip/tags/searching/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之查找（二）</title>
    <link href="https://liufan.vip/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2019-4-3-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E6%9F%A5%E6%89%BE2/"/>
    <id>https://liufan.vip/数据结构/2019-4-3-数据结构之查找2/</id>
    <published>2019-04-03T09:00:30.000Z</published>
    <updated>2019-04-03T13:10:54.179Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在前面的博文中，我们介绍了5种查找算法，本文主要介绍哈希表及哈希查找算法。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://liufan.vip/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="data structure" scheme="https://liufan.vip/tags/data-structure/"/>
    
      <category term="searching" scheme="https://liufan.vip/tags/searching/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之查找（一）</title>
    <link href="https://liufan.vip/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2019-4-3-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E6%9F%A5%E6%89%BE/"/>
    <id>https://liufan.vip/数据结构/2019-4-3-数据结构之查找/</id>
    <published>2019-04-03T01:59:20.000Z</published>
    <updated>2019-04-03T07:00:49.954Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍数据结构中的查找算法，主要介绍&lt;strong&gt;顺序查找&lt;/strong&gt;、&lt;strong&gt;折半查找（二分查找）&lt;/strong&gt;、&lt;strong&gt;树表查找&lt;/strong&gt;、&lt;strong&gt;分块查找&lt;/strong&gt;、&lt;strong&gt;哈希查找（散列）&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://liufan.vip/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="data structure" scheme="https://liufan.vip/tags/data-structure/"/>
    
      <category term="searching" scheme="https://liufan.vip/tags/searching/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之栈和队列（二）</title>
    <link href="https://liufan.vip/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2019-3-31-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%972/"/>
    <id>https://liufan.vip/数据结构/2019-3-31-数据结构之栈和队列2/</id>
    <published>2019-03-31T11:33:55.000Z</published>
    <updated>2019-03-31T13:29:04.730Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在上篇博文中，我们了解了栈的节本原理和操作。本文主要介绍另外一种操作受限的线性表，&lt;strong&gt;队列（Queue）&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://liufan.vip/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="data structure" scheme="https://liufan.vip/tags/data-structure/"/>
    
      <category term="stack queue" scheme="https://liufan.vip/tags/stack-queue/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之栈和队列（一）</title>
    <link href="https://liufan.vip/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2019-3-31-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/"/>
    <id>https://liufan.vip/数据结构/2019-3-31-数据结构之栈和队列/</id>
    <published>2019-03-31T05:29:07.000Z</published>
    <updated>2019-03-31T06:37:11.657Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍2种操作受限的线性表结构：&lt;strong&gt;栈（Stack）和队列（Queue）&lt;/strong&gt;，包括它们的概念和存储结构。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://liufan.vip/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="data structure" scheme="https://liufan.vip/tags/data-structure/"/>
    
      <category term="stack queue" scheme="https://liufan.vip/tags/stack-queue/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之线性表（链式表示）</title>
    <link href="https://liufan.vip/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2019-3-30-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E7%BA%BF%E6%80%A7%E8%A1%A82/"/>
    <id>https://liufan.vip/数据结构/2019-3-30-数据结构之线性表2/</id>
    <published>2019-03-30T07:14:30.000Z</published>
    <updated>2019-03-30T11:38:53.271Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在上篇博文中，我们介绍了线性表的顺序存储，本文将介绍其链式表示方式。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://liufan.vip/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="data structure" scheme="https://liufan.vip/tags/data-structure/"/>
    
      <category term="linear list" scheme="https://liufan.vip/tags/linear-list/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之线性表（顺序表示）</title>
    <link href="https://liufan.vip/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2019-3-30-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E7%BA%BF%E6%80%A7%E8%A1%A8/"/>
    <id>https://liufan.vip/数据结构/2019-3-30-数据结构之线性表/</id>
    <published>2019-03-30T02:54:23.000Z</published>
    <updated>2019-03-30T11:39:27.959Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;线性表&lt;/strong&gt;是具有&lt;strong&gt;相同&lt;/strong&gt;数据类型的$n(n&amp;gt;=0)$个数据元素的&lt;strong&gt;有限序列&lt;/strong&gt;。其中$n$为表长，当$n=0$时，线性表是一个空表。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://liufan.vip/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="data structure" scheme="https://liufan.vip/tags/data-structure/"/>
    
      <category term="linear list" scheme="https://liufan.vip/tags/linear-list/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之绪论</title>
    <link href="https://liufan.vip/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2019-3-30-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E7%BB%AA%E8%AE%BA/"/>
    <id>https://liufan.vip/数据结构/2019-3-30-数据结构之绪论/</id>
    <published>2019-03-30T01:47:41.000Z</published>
    <updated>2019-03-30T02:22:51.703Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍数据结构中的一些基本知识，例如&lt;strong&gt;数据结构得划分、数据类型、算法&lt;/strong&gt;等。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://liufan.vip/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="data structure" scheme="https://liufan.vip/tags/data-structure/"/>
    
  </entry>
  
  <entry>
    <title>利用深度学习对医学CT图像(LIDC-IDRI)中的肺结节进行良恶性判断(二)</title>
    <link href="https://liufan.vip/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/2019-3-29-%E5%88%A9%E7%94%A8%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%AF%B9%E5%8C%BB%E5%AD%A6CT%E5%9B%BE%E5%83%8F%E4%B8%AD%E7%9A%84%E8%82%BA%E7%BB%93%E8%8A%82%E8%BF%9B%E8%A1%8C%E8%89%AF%E6%81%B6%E6%80%A7%E5%88%A4%E6%96%AD2/"/>
    <id>https://liufan.vip/项目实战/2019-3-29-利用深度学习对医学CT图像中的肺结节进行良恶性判断2/</id>
    <published>2019-03-29T12:12:19.000Z</published>
    <updated>2019-03-29T12:55:00.989Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在上篇博文中，我们详细介绍了如何分割肺实质，并根据标注信息提取肺结节，本文主要介绍如何利用CNN网络训练分类模型，辅助医生作出判断。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="项目实战" scheme="https://liufan.vip/categories/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="deep learning" scheme="https://liufan.vip/tags/deep-learning/"/>
    
      <category term="CNN" scheme="https://liufan.vip/tags/CNN/"/>
    
  </entry>
  
  <entry>
    <title>利用深度学习对医学CT图像(LIDC-IDRI)中的肺结节进行良恶性判断</title>
    <link href="https://liufan.vip/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/2019-3-29-%E5%88%A9%E7%94%A8%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%AF%B9%E5%8C%BB%E5%AD%A6-CT-%E5%9B%BE%E5%83%8F%E4%B8%AD%E7%9A%84%E8%82%BA%E7%BB%93%E8%8A%82%E8%BF%9B%E8%A1%8C%E8%89%AF%E6%81%B6%E6%80%A7%E5%88%A4%E6%96%AD/"/>
    <id>https://liufan.vip/项目实战/2019-3-29-利用深度学习对医学-CT-图像中的肺结节进行良恶性判断/</id>
    <published>2019-03-29T02:22:47.000Z</published>
    <updated>2019-03-29T11:54:49.833Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;肺癌是最常见的癌症，目前，CT可用于帮助医生在早期阶段检测肺癌。 在许多情况下，识别肺癌的诊断取决于医生的经验，这可能会忽略一些患者并导致一些问题。 在许多医学影像诊断领域，深度学习已被证明是一种流行且有效的方法。&lt;/p&gt;
    
    </summary>
    
      <category term="项目实战" scheme="https://liufan.vip/categories/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="deep learning" scheme="https://liufan.vip/tags/deep-learning/"/>
    
      <category term="CNN" scheme="https://liufan.vip/tags/CNN/"/>
    
  </entry>
  
  <entry>
    <title>CNN网络发展史</title>
    <link href="https://liufan.vip/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2019-3-28-CNN%E7%BD%91%E7%BB%9C%E5%8F%91%E5%8F%91%E5%B1%95%E5%8F%B2/"/>
    <id>https://liufan.vip/深度学习/2019-3-28-CNN网络发发展史/</id>
    <published>2019-03-28T03:47:58.000Z</published>
    <updated>2019-03-28T03:57:39.432Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;卷积神经网络可谓是现在深度学习领域中大红大紫的网络框架，尤其在计算机视觉领域更是一枝独秀。&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="https://liufan.vip/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="CNN" scheme="https://liufan.vip/tags/CNN/"/>
    
  </entry>
  
  <entry>
    <title>马氏距离和欧式距离详解</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-27-%E9%A9%AC%E6%B0%8F%E8%B7%9D%E7%A6%BB%E5%92%8C%E6%AC%A7%E5%BC%8F%E8%B7%9D%E7%A6%BB%E8%AF%A6%E8%A7%A3/"/>
    <id>https://liufan.vip/机器学习/2019-3-27-马氏距离和欧式距离详解/</id>
    <published>2019-03-27T13:27:21.000Z</published>
    <updated>2019-03-28T02:13:41.918Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;一般在机器学习模型中会涉及到衡量两个样本间的距离，如&lt;strong&gt;聚类、KNN，K-means&lt;/strong&gt;等，使用的距离为&lt;strong&gt;欧式距离&lt;/strong&gt;。其实，除了欧氏距离之外，还有很多的距离计算标准，本文主要介绍欧氏距离和马氏距离。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="distance" scheme="https://liufan.vip/tags/distance/"/>
    
  </entry>
  
  <entry>
    <title>集成学习中的Bagging和Boosting</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-25-%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E4%B8%AD%E7%9A%84Bagging%E5%92%8CBoosting/"/>
    <id>https://liufan.vip/机器学习/2019-3-25-集成学习中的Bagging和Boosting/</id>
    <published>2019-03-25T11:51:38.000Z</published>
    <updated>2019-03-25T13:42:51.717Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在机器学习和统计学习中, &lt;strong&gt;集成学习&lt;/strong&gt;(&lt;code&gt;Ensemble Learning&lt;/code&gt;)是一种将多种学习算法组合在一起以取得更好表现的一种方法。它本身不是一个单独的机器学习算法，而是通过构建并结合多个机器学习器来完成学习任务。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="ensemble learning" scheme="https://liufan.vip/tags/ensemble-learning/"/>
    
  </entry>
  
  <entry>
    <title>数字图像处理的常用方法</title>
    <link href="https://liufan.vip/Computer-vision/2019-3-25-%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>https://liufan.vip/Computer-vision/2019-3-25-数字图像处理的常用方法/</id>
    <published>2019-03-25T08:59:56.000Z</published>
    <updated>2019-03-25T09:24:33.168Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;数字图像处理是指将图像信号转换成数字信号并利用计算机对其进行处理的过程。图像处理中，输入的是质量低的图像，输出的是改善质量后的图像，常用的图像处理方法有图像增强、复原、编码、压缩等。&lt;/p&gt;
    
    </summary>
    
      <category term="Computer vision" scheme="https://liufan.vip/categories/Computer-vision/"/>
    
    
      <category term="Image processing" scheme="https://liufan.vip/tags/Image-processing/"/>
    
  </entry>
  
  <entry>
    <title>准确率，精确率，召回率和F1值</title>
    <link href="https://liufan.vip/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2019-3-22-%E5%87%86%E7%A1%AE%E7%8E%87%EF%BC%8C%E7%B2%BE%E7%A1%AE%E7%8E%87%EF%BC%8C%E5%8F%AC%E5%9B%9E%E7%8E%87%E5%92%8CF1%E5%80%BC/"/>
    <id>https://liufan.vip/机器学习/2019-3-22-准确率，精确率，召回率和F1值/</id>
    <published>2019-03-22T11:54:35.000Z</published>
    <updated>2019-03-22T13:59:58.581Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;机器学习(ML),自然语言处理(NLP),信息检索(IR)&lt;/strong&gt;等领域,&lt;strong&gt;评估&lt;/strong&gt;&lt;code&gt;(Evaluation)&lt;/code&gt;是一个必要的 工作,而其评价指标往往有如下几点:&lt;strong&gt;准确率&lt;/strong&gt;&lt;code&gt;(Accuracy)&lt;/code&gt;&lt;strong&gt;,精确率&lt;/strong&gt;&lt;code&gt;(Precision)&lt;/code&gt;,&lt;strong&gt;召回率&lt;/strong&gt;&lt;code&gt;(Recall)&lt;/code&gt;和&lt;code&gt;F1-Measure&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://liufan.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="machine learning" scheme="https://liufan.vip/tags/machine-learning/"/>
    
      <category term="evaluation" scheme="https://liufan.vip/tags/evaluation/"/>
    
  </entry>
  
</feed>
